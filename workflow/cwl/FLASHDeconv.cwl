# Copyright (c) 2002-2023, The OpenMS Team -- EKU Tuebingen, ETH Zurich, and FU Berlin
# SPDX-License-Identifier: Apache-2.0
label: FLASHDeconv
doc: Ultra-fast high-quality deconvolution enables online processing of top-down MS data
inputs:
  in:
    doc: Input file (mzML)
    type: File
  out:
    doc: Default output tsv file containing deconvolved features
    type: string
  out_spec1:
    doc: Output tsv file containing deconvolved MS1 spectra. Likewise, use -out_spec2, ..., -out_spec4 to specify tsv files for MS2, ..., MS4.
    type: string?
  out_spec2:
    doc: Output tsv file containing deconvolved MS2 spectra.
    type: string?
  out_spec3:
    doc: Output tsv file containing deconvolved MS3 spectra.
    type: string?
  out_spec4:
    doc: Output tsv file containing deconvolved MS4 spectra.
    type: string?
  out_mzml:
    doc: Output mzml file containing deconvolved spectra (of all MS levels)
    type: string?
  out_quant:
    doc: Output tsv file containing isobaric quantification results for MS2 only
    type: string?
  out_annotated_mzml:
    doc: Output mzml file containing annotated spectra. For each annotated peak, monoisotopic mass, charge, and isotope index are stored as meta data. Unannotated peaks are also copied as well without meta data.
    type: string?
  out_msalign1:
    doc: "Output msalign (topFD and ProMex compatible) file containing MS1 deconvolved spectra. Likewise, use -out_msalign2 for MS2 spectra. The file names for MS1 and MS2 should end with ms1.msalign and ms2.msalgin respectively to be able to be recognized by TopPIC GUI. "
    type: string?
  out_msalign2:
    doc: "Output msalign (topFD and ProMex compatible) file containing MS2 deconvolved spectra. The file name should end with ms2.msalign to be able to be recognized by TopPIC GUI. "
    type: string?
  out_feature1:
    doc: Output feature (topFD compatible) file containing MS1 deconvolved features. Likewise, use -out_feature2 for MS2 features. The MS1 and MS2 feature files are necessary for TopPIC feature intensity output.
    type: string?
  out_feature2:
    doc: Output feature (topFD compatible) file containing MS2 deconvolved features. The MS1 and MS2 feature files are necessary for TopPIC feature intensity output.
    type: string?
  keep_empty_out:
    doc: If set, empty output files (e.g., *.tsv file when no feature was generated) are kept.
    type: boolean?
  mzml_mass_charge:
    doc: Charge state of deconvolved masses in mzml output (specified by out_mzml)
    type: long?
  write_detail:
    doc: To write peak information per deconvolved mass in detail or not in tsv files for deconvolved spectra. If set to 1, all peak information (m/z, intensity, charge and isotope index) per mass is reported.
    type: boolean?
  precursor_snr:
    doc: Precursor SNR threshold for TopFD MS2 msalign tsv files.
    type: double?
  min_mz:
    doc: If set to positive value, minimum m/z to deconvolve.
    type: double?
  max_mz:
    doc: If set to positive value, maximum m/z to deconvolve.
    type: double?
  min_rt:
    doc: If set to positive value, minimum RT (in second) to deconvolve.
    type: double?
  max_rt:
    doc: If set to positive value, maximum RT (in second) to deconvolve.
    type: double?
  log:
    doc: Name of log file (created only when specified)
    type: string?
  debug:
    doc: Sets the debug level
    type: long?
  threads:
    doc: Sets the number of threads allowed to be used by the TOPP tool
    type: long?
  no_progress:
    doc: Disables progress logging to command line
    type: boolean?
  force:
    doc: Overrides tool-specific checks
    type: boolean?
  test:
    doc: Enables the test mode (needed for internal use only)
    type: boolean?
  FD__ida_log:
    doc: log file generated by FLASHIda (IDA*.log). Only needed for coupling with FLASHIda acquisition
    type: string?
  FD__report_FDR:
    doc: Report qvalues (roughly, point-wise FDR) for deconvolved masses. Decoy masses to calculate qvalues and FDR are also reported. Beta version.
    type: boolean?
  FD__allowed_isotope_error:
    doc: Allowed isotope index error for decoy and FDR report. If it is set to 2, for example, +-2 isotope errors are not counted as false. Beta version.
    type: long?
  FD__use_RNA_averagine:
    doc: If set, RNA averagine model is used.
    type: boolean?
  FD__preceding_MS1_count:
    doc: Specifies the number of preceding MS1 spectra for MS2 precursor determination. In TDP, the precursor peak of a MS2 spectrum may not belong to any deconvolved masses in the MS1 spectrum immediately preceding the MS2 spectrum. Increasing this parameter to N allows for the search for the deconvolved masses in the N preceding MS1 spectra from the MS2 spectrum, increasing the chance that its precursor is deconvolved.
    type: long?
  FD__isolation_window:
    doc: Default isolation window with. If the input mzML file does not contain isolation window width information, this width will be used.
    type: double?
  FD__forced_MS_level:
    doc: If set to an integer N, MS level of all spectra will be set to N regardless of original MS level. Useful when deconvolving datasets containing only MS2 spectra.
    type: long?
  FD__merging_method:
    doc: "Method for spectra merging before deconvolution. 0: No merging  1: Average gaussian method to perform moving gaussian averaging of spectra per MS level. Effective to increase proteoform ID sensitivity (in particular for Q-TOF datasets). 2: Block method to perform merging of all spectra into a single one per MS level (e.g., for NativeMS datasets)."
    type: long?
  SD__tol:
    doc: ppm tolerance for MS1, 2, ... (e.g., -tol 10.0 5.0 to specify 10.0 and 5.0 ppm for MS1 and MS2, respectively)
    type: double[]?
  SD__min_mass:
    doc: Minimum mass (Da)
    type: double?
  SD__max_mass:
    doc: Maximum mass (Da)
    type: double?
  SD__min_charge:
    doc: Minimum charge state for MS1 spectra (can be negative for negative mode)
    type: long?
  SD__max_charge:
    doc: Maximum charge state for MS1 spectra (can be negative for negative mode)
    type: long?
  SD__precursor_charge:
    doc: "Charge state of the target precursor. All precursor charge is fixed to this value. This parameter is useful for targeted studies where MS2 spectra are generated from a fixed precursor (e.g., Native-MS). "
    type: long?
  SD__precursor_mz:
    doc: "Target precursor m/z value. This option must be used with -target_precursor_charge option. Otherwise, it will be ignored. If -precursor_charge option is used but this option is not used, the precursor m/z value written in MS2 spectra will be used by default. "
    type: double?
  SD__min_cos:
    doc: Cosine similarity thresholds between avg. and observed isotope pattern for MS1, 2, ... (e.g., -min_cos 0.3 0.6 to specify 0.3 and 0.6 for MS1 and MS2, respectively)
    type: double[]?
  SD__min_snr:
    doc: Minimum charge SNR (the SNR of the isotope pattern of a specific charge) thresholds for MS1, 2, ... (e.g., -min_snr 1.0 0.6 to specify 1.0 and 0.6 for MS1 and MS2, respectively)
    type: double[]?
  SD__max_qvalue:
    doc: Qvalue thresholds for MS1, 2, ... Effective only when FDR estimation is active. (e.g., -max_qvalue 0.1 0.2 to specify 0.1 and 0.2 for MS1 and MS2, respectively)
    type: double[]?
  ft__mass_error_ppm:
    doc: Feature tracing mass ppm tolerance. When negative, MS1 tolerance for mass deconvolution will be used (e.g., 16 ppm is used when -SD:tol 16).
    type: double?
  ft__quant_method:
    doc: Method of quantification for mass traces. For LC data 'area' is recommended, 'median' for direct injection data. 'max_height' simply uses the most intense peak in the trace.
    type: string?
  ft__min_sample_rate:
    doc: Minimum fraction of scans along the feature trace that must contain a peak. To raise feature detection sensitivity, lower this value close to 0.
    type: double?
  ft__min_trace_length:
    doc: Minimum expected length of a mass trace (in seconds). Only for MS1 (or minimum MS level in the dataset) feature tracing. For MSn, all traces are kept regardless of this value.
    type: double?
  ft__max_trace_length:
    doc: Maximum expected length of a mass trace (in seconds). Set to a negative value to disable maximal length check during mass trace detection.
    type: double?
  ft__min_cos:
    doc: "Cosine similarity threshold between avg. and observed isotope pattern.  When negative, MS1 cosine threshold for mass deconvolution will be used "
    type: double?
  iq__type:
    doc: Isobaric Quantitation method used in the experiment.
    type: string?
  iq__isotope_correction:
    doc: Enable isotope correction (highly recommended). Note that you need to provide a correct isotope correction matrix otherwise the tool will fail or produce invalid results.
    type: string?
  iq__reporter_mz_tol:
    doc: m/z tolerance in Th from the expected position of reporter ion m/zs.
    type: double?
  tagger__max_tag_count:
    doc: "Maximum number of the tags per length (lengths set by -min_length and -max_length options). The tags with different amino acid combinations are all treated separately. E.g., TII, TIL, TLI, TLL are distinct tags even though they have the same mass differences. but are counted as four different tags. "
    type: long?
  tagger__min_length:
    doc: "Minimum length of a tag. Each mass gap contributes to a single length (even if a mass gap is represented by multiple amino acids). "
    type: long?
  tagger__max_length:
    doc: "Maximum length of a tag. Each mass gap contributes to a single length (even if a mass gap is represented by multiple amino acids). "
    type: long?
  tagger__flanking_mass_tol:
    doc: Flanking mass tolerance in Da.
    type: double?
  tagger__max_iso_error_count:
    doc: Maximum isotope error count per tag.
    type: long?
  tagger__min_matched_aa:
    doc: Minimum number of amino acids in matched proteins, covered by tags.
    type: long?
  tagger__fasta:
    doc: Target protein sequence database against which tags will be matched.
    type: File?
  tagger__out:
    doc: Tagger output file.
    type: string?
outputs:
  out:
    type: File
    outputBinding:
      glob: $(inputs.out)
  out_spec1:
    type: File?
    outputBinding:
      glob: $(inputs.out_spec1)
  out_spec2:
    type: File?
    outputBinding:
      glob: $(inputs.out_spec2)
  out_spec3:
    type: File?
    outputBinding:
      glob: $(inputs.out_spec3)
  out_spec4:
    type: File?
    outputBinding:
      glob: $(inputs.out_spec4)
  out_mzml:
    type: File?
    outputBinding:
      glob: $(inputs.out_mzml)
  out_quant:
    type: File?
    outputBinding:
      glob: $(inputs.out_quant)
  out_annotated_mzml:
    type: File?
    outputBinding:
      glob: $(inputs.out_annotated_mzml)
  out_msalign1:
    type: File?
    outputBinding:
      glob: $(inputs.out_msalign1)
  out_msalign2:
    type: File?
    outputBinding:
      glob: $(inputs.out_msalign2)
  out_feature1:
    type: File?
    outputBinding:
      glob: $(inputs.out_feature1)
  out_feature2:
    type: File?
    outputBinding:
      glob: $(inputs.out_feature2)
  tagger__out:
    type: File?
    outputBinding:
      glob: $(inputs.tagger__out)
cwlVersion: v1.2
class: CommandLineTool
baseCommand:
  - FLASHDeconv
requirements:
  InlineJavascriptRequirement: {}
  InitialWorkDirRequirement:
    listing:
      - entryname: cwl_inputs.json
        entry: $(JSON.stringify(inputs))
arguments:
  - -ini
  - cwl_inputs.json
